{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Apis-app\\\\src\\\\Layouts\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useEffect, useState } from 'react';\nimport { Button, Container, Form, FormControl, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\nimport { useHistory } from 'react-router';\nimport Apis, { endpoints } from '../Configs/Apis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n\n  let [categories, setCategories] = useState([]);\n  let [q, setq] = useState(\"\");\n  let history = useHistory(); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  useEffect(async () => {\n    try {\n      let res = await Apis.get(endpoints['categories']).then(resp => {\n        setCategories(resp.data);\n      });\n    } catch (ex) {\n      console.error(ex);\n    }\n  });\n\n  const search = event => {\n    // event.preventDefault()\n    history.push(`/?q=${q}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"light\",\n      expand: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        href: \"#\",\n        children: \"Navbar scroll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n        \"aria-controls\": \"navbarScroll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n        id: \"navbarScroll\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          className: \"mr-auto my-2 my-lg-0\",\n          style: {\n            maxHeight: '100px'\n          },\n          navbarScroll: true,\n          children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n            href: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 7\n          }, this), categories.map((u, index) => {\n            let path = `?category_id=${u.id}`;\n            return /*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: path,\n              children: u.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 11\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: search,\n          className: \"d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"text\",\n            placeholder: \"Search\",\n            className: \"mr-sm-2\",\n            value: q,\n            onChange: event => {\n              setq(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"\",\n            type: \"submit\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 1\n  }, this);\n}\n\n_s(Header, \"FjDEu97gacmGFBn/50v7TUaEdps=\", false, function () {\n  return [useHistory];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/Admin/Apis-app/src/Layouts/Header.js"],"names":["useEffect","useState","Button","Container","Form","FormControl","Nav","Navbar","NavDropdown","useHistory","Apis","endpoints","Header","categories","setCategories","q","setq","history","res","get","then","resp","data","ex","console","error","search","event","push","maxHeight","map","u","index","path","id","name","target","value"],"mappings":";;;AAAA,OAAO,sCAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,EAAkCC,WAAlC,EAA+CC,GAA/C,EAAoDC,MAApD,EAA4DC,WAA5D,QAA+E,iBAA/E;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,IAAP,IAAeC,SAAf,QAAgC,iBAAhC;;AAGA,eAAe,SAASC,MAAT,GAAiB;AAAA;;AAC9B,MAAI,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA1C;AACA,MAAI,CAACc,CAAD,EAAGC,IAAH,IAAWf,QAAQ,CAAC,EAAD,CAAvB;AACA,MAAIgB,OAAO,GAAGR,UAAU,EAAxB,CAH8B,CAK9B;;AACAT,EAAAA,SAAS,CAAC,YAAU;AAChB,QAAG;AACD,UAAIkB,GAAG,GAAG,MAAMR,IAAI,CAACS,GAAL,CAASR,SAAS,CAAC,YAAD,CAAlB,EAAkCS,IAAlC,CAAuCC,IAAI,IAAG;AAC5DP,QAAAA,aAAa,CAACO,IAAI,CAACC,IAAN,CAAb;AACD,OAFe,CAAhB;AAGD,KAJD,CAIC,OAAMC,EAAN,EAAS;AACRC,MAAAA,OAAO,CAACC,KAAR,CAAcF,EAAd;AACD;AACJ,GARQ,CAAT;;AAUA,QAAMG,MAAM,GAAIC,KAAD,IAAU;AACvB;AACAV,IAAAA,OAAO,CAACW,IAAR,CAAc,OAAMb,CAAE,EAAtB;AACD,GAHD;;AAMA,sBACF,QAAC,SAAD;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,OAAX;AAAmB,MAAA,MAAM,EAAC,IAA1B;AAAA,8BACE,QAAC,MAAD,CAAQ,KAAR;AAAc,QAAA,IAAI,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD,CAAQ,MAAR;AAAe,yBAAc;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD,CAAQ,QAAR;AAAiB,QAAA,EAAE,EAAC,cAApB;AAAA,gCACA,QAAC,GAAD;AACA,UAAA,SAAS,EAAC,sBADV;AAEA,UAAA,KAAK,EAAE;AAAEc,YAAAA,SAAS,EAAE;AAAb,WAFP;AAGA,UAAA,YAAY,MAHZ;AAAA,kCAKA,QAAC,GAAD,CAAK,IAAL;AAAU,YAAA,IAAI,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA,EAMChB,UAAU,CAACiB,GAAX,CAAe,CAACC,CAAD,EAAGC,KAAH,KAAY;AAC1B,gBAAIC,IAAI,GAAI,gBAAeF,CAAC,CAACG,EAAG,EAAhC;AACA,gCACE,QAAC,GAAD,CAAK,IAAL;AAAsB,cAAA,IAAI,EAAED,IAA5B;AAAA,wBAAmCF,CAAC,CAACI;AAArC,eAAeH,KAAf;AAAA;AAAA;AAAA;AAAA,oBADF;AAEA,WAJD,CAND;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAcF,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAIN,MAAlB;AAA0B,UAAA,SAAS,EAAC,QAApC;AAAA,kCACI,QAAC,WAAD;AAAa,YAAA,IAAI,EAAC,MAAlB;AAAyB,YAAA,WAAW,EAAC,QAArC;AAA8C,YAAA,SAAS,EAAC,SAAxD;AAAkE,YAAA,KAAK,EAAEX,CAAzE;AACA,YAAA,QAAQ,EAAIY,KAAD,IAAU;AACnBX,cAAAA,IAAI,CAACW,KAAK,CAACS,MAAN,CAAaC,KAAd,CAAJ;AACD;AAHD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAC,EAAlB;AAAqB,YAAA,IAAI,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdE;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADE;AA8BD;;GApDuBzB,M;UAGRH,U;;;KAHQG,M","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { Button, Container, Form, FormControl, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport { useHistory } from 'react-router';\r\nimport Apis, { endpoints } from '../Configs/Apis';\r\n\r\n\r\nexport default function Header(){\r\n  let [categories, setCategories] = useState([])\r\n  let [q,setq] = useState(\"\")\r\n  let history = useHistory()\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(async ()=>{\r\n      try{\r\n        let res = await Apis.get(endpoints['categories']).then(resp =>{\r\n          setCategories(resp.data)\r\n        })\r\n      }catch(ex){\r\n        console.error(ex)\r\n      }\r\n  })\r\n\r\n  const search = (event) =>{\r\n    // event.preventDefault()\r\n    history.push(`/?q=${q}`)\r\n  }\r\n\r\n\r\n  return(\r\n<Container>\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Navbar.Brand href=\"#\">Navbar scroll</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n      <Navbar.Collapse id=\"navbarScroll\">\r\n      <Nav\r\n      className=\"mr-auto my-2 my-lg-0\"\r\n      style={{ maxHeight: '100px' }}\r\n      navbarScroll\r\n      >\r\n      <Nav.Link href=\"/\">Home</Nav.Link>\r\n      {categories.map((u,index)=> {\r\n        let path = `?category_id=${u.id}`\r\n        return(\r\n          <Nav.Link key={index} href={path}>{u.name}</Nav.Link>\r\n      )})}\r\n\r\n    </Nav>\r\n    <Form onSubmit = {search} className=\"d-flex\">\r\n        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" value={q} \r\n        onChange= {(event) =>{\r\n          setq(event.target.value)\r\n        }}/>\r\n        <Button className=\"\" type=\"submit\">Search</Button>          \r\n    </Form>\r\n    </Navbar.Collapse>\r\n  </Navbar>\r\n</Container>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}