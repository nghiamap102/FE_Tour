{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Apis-app\\\\src\\\\Components\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useHistory } from \"react-router\";\nimport Apis, { endpoints } from \"../Configs/Apis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [confirm_password, setConfirm_password] = useState();\n  const [firstname, setFirstname] = useState();\n  const [lastname, setLastname] = useState();\n  const [email, setEmail] = useState();\n  const avatar = useRef();\n  const history = useHistory();\n\n  const change = () => {};\n\n  const register = event => {\n    event.preventDefault();\n\n    let resgisterUser = async () => {\n      const formdata = new FormData();\n      formdata.append(\"first_name\", firstname);\n      formdata.append(\"last_name\", lastname);\n      formdata.append(\"email\", email);\n      formdata.append(\"username\", username);\n      formdata.append(\"password\", password);\n      formdata.append(\"avatar\", avatar.current.files[0]);\n\n      try {\n        let res = await Apis.post(endpoints['register'], formdata, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        console.info(res.data);\n        history.push(\"/login\");\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    if (password === confirm_password && password !== null) {\n      resgisterUser();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: register,\n      children: [/*#__PURE__*/_jsxDEV(RegisterForm, {\n        id: \"firstname\",\n        label: \"First name\",\n        type: \"text\",\n        value: firstname,\n        change: event => setFirstname(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(RegisterForm, {\n        id: \"lastname\",\n        label: \"Last name\",\n        type: \"text\",\n        value: lastname,\n        change: event => setLastname(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(RegisterForm, {\n        id: \"email\",\n        label: \"Email\",\n        type: \"email\",\n        value: email,\n        change: event => setEmail(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(RegisterForm, {\n        id: \"username\",\n        label: \"Username\",\n        type: \"text\",\n        value: username,\n        change: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(RegisterForm, {\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        value: password,\n        change: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(RegisterForm, {\n        id: \"confirm\",\n        label: \"Confirm Password\",\n        type: \"password\",\n        value: confirm_password,\n        change: event => setConfirm_password(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"avatar\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"file\",\n          ref: avatar,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"\\u0110\\u0103ng k\\xED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n\n_s(Register, \"AzYgoNlYcGfiVS6jBm1xhZOeYvI=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\n\nfunction RegisterForm(props) {\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    className: \"mb-3\",\n    controlId: props.id,\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: props.type,\n      value: props.value,\n      onChange: props.change,\n      placeholder: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 1\n  }, this);\n}\n\n_c2 = RegisterForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Register\");\n$RefreshReg$(_c2, \"RegisterForm\");","map":{"version":3,"sources":["C:/Users/Admin/Apis-app/src/Components/Register.js"],"names":["useRef","useState","Form","Button","useHistory","Apis","endpoints","Register","username","setUsername","password","setPassword","confirm_password","setConfirm_password","firstname","setFirstname","lastname","setLastname","email","setEmail","avatar","history","change","register","event","preventDefault","resgisterUser","formdata","FormData","append","current","files","res","post","headers","console","info","data","push","err","error","target","value","RegisterForm","props","id","label","type"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\"\r\nimport { Form,Button } from \"react-bootstrap\"\r\nimport { useHistory } from \"react-router\"\r\nimport Apis ,{endpoints}from \"../Configs/Apis\"\r\n\r\nexport default function Register(){\r\n    const [username, setUsername] = useState()\r\n    const [password, setPassword] = useState()\r\n    const [confirm_password, setConfirm_password] = useState()\r\n    const [firstname, setFirstname] = useState()\r\n    const [lastname, setLastname] = useState()\r\n    const [email, setEmail] = useState()\r\n    const avatar = useRef()\r\n    const history = useHistory()\r\n\r\n\r\n\r\n    const change =()=>{\r\n        \r\n    }\r\n\r\n    const register = (event)=>{\r\n        event.preventDefault()\r\n        let resgisterUser = async()=>{\r\n            const formdata =new FormData()\r\n            formdata.append(\"first_name\" , firstname)\r\n            formdata.append(\"last_name\" , lastname)\r\n            formdata.append(\"email\" , email)\r\n            formdata.append(\"username\" , username)\r\n            formdata.append(\"password\" , password)\r\n            formdata.append(\"avatar\" , avatar.current.files[0])\r\n        \r\n            try{\r\n              let res = await Apis.post(endpoints['register'],formdata,{\r\n                headers:{\r\n                  \"Content-Type\":\"multipart/form-data\"\r\n                }\r\n              })  \r\n              console.info(res.data)\r\n\r\n              history.push(\"/login\")\r\n\r\n            }catch(err){\r\n              console.error(err)\r\n            }\r\n        }\r\n\r\n\r\n        if (password === confirm_password && password !== null){\r\n          resgisterUser()\r\n        }\r\n    }\r\n\r\n    return(\r\n<>\r\n<Form onSubmit={register}>\r\n    <RegisterForm id=\"firstname\" label=\"First name\" type=\"text\" value={firstname} change={(event)=>setFirstname(event.target.value)}/>\r\n    <RegisterForm id=\"lastname\" label=\"Last name\" type=\"text\" value={lastname} change={(event)=>setLastname(event.target.value)}/>\r\n    <RegisterForm id=\"email\" label=\"Email\" type=\"email\" value={email} change={(event)=>setEmail(event.target.value)}/>\r\n    <RegisterForm id=\"username\" label=\"Username\" type=\"text\" value={username} change={(event)=>setUsername(event.target.value)}/>\r\n    <RegisterForm id=\"password\" label=\"Password\" type=\"password\" value={password} change={(event)=>setPassword(event.target.value)}/>\r\n    <RegisterForm id=\"confirm\" label=\"Confirm Password\" type=\"password\" value={confirm_password} change={(event)=>setConfirm_password(event.target.value)}/>\r\n\r\n    <Form.Group className=\"mb-3\" controlId=\"avatar\">\r\n    <Form.Label>Avatar</Form.Label>\r\n    <Form.Control type=\"file\" ref={avatar} className=\"form-control\"/>\r\n    </Form.Group>\r\n\r\n\r\n  <Button variant=\"primary\" type=\"submit\">\r\n    Đăng kí\r\n  </Button>\r\n</Form>\r\n</>\r\n    )\r\n}\r\n\r\nfunction RegisterForm(props){\r\n    return(\r\n<Form.Group className=\"mb-3\" controlId={props.id}>\r\n    <Form.Label>{props.label}</Form.Label>\r\n    <Form.Control type={props.type} value={props.value} onChange={props.change} placeholder=\"Username\" />\r\n  </Form.Group>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}