declare type StringToCharArray<Str extends string> = string extends Str ? string[] : Str extends '' ? [] : Str extends `${infer PartOne}${infer PartTwo}` ? [PartOne, ...StringToCharArray<PartTwo>] : [Str];
export declare type Percent<Value extends number> = `${Value}` extends `${infer NumberToString}` ? NumberToString extends `-${string}` ? never : StringToCharArray<NumberToString> extends infer Chars ? Chars extends {
    length: 1;
} ? Value : Chars extends {
    length: 2;
} ? Value : Value extends 100 ? 100 : never : never : never;
export {};
